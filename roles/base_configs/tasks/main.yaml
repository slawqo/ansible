---
- name: "Check installed packages"
  package_facts:
    manager: "auto"


- name: Configure tmux
  block:
    - name: Check tmux version
      shell: tmux -V | awk '{print $2}'
      environment:
          PATH: '{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin'
      register: tmux_version

    - name: Set tmux config file name for old tmux
      set_fact:
        tmux_conf_file_name: "files/tmux/tmux.conf.legacy"
        when: tmux_version.stdout is version('2.4', '<=')

    - name: Set tmux config file name
      set_fact:
        tmux_conf_file_name: "files/tmux/tmux.conf"
      when: tmux_version.stdout is version('2.4', '>') and tmux_config == "simple"

    - name: Set tmux config file name for fancy tmux
      set_fact:
        tmux_conf_file_name: "files/tmux/tmux.conf.fancy"
      when: tmux_version.stdout is version('2.4', '>') and tmux_config == "fancy"

    - name: Copy tmux config
      copy:
          src: "{{ tmux_conf_file_name }}"
          dest: "{{ ansible_env.HOME }}/.tmux.conf"

    - name: Copy local config for fancy tmux
      copy:
          src: "files/tmux/tmux.conf.local"
          dest: "{{ ansible_env.HOME }}/.tmux.conf.local"
  when: "'tmux' in ansible_facts.packages"


- name: Configure ZSH
  block:
    - name: Check zsh version
      shell: zsh --version |  awk '{print $2}'
      environment:
          PATH: '{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin'
      register: zsh_version_cmd

    - name: Set zsh version variable
      set_fact:
        zsh_version={{ zsh_version_cmd.stdout }}

    - name: Copy zshrc
      template:
          src=zshrc.j2
          dest="{{ ansible_env.HOME }}/.zshrc"
  when: "'zsh' in ansible_facts.packages"


- name: Copy bashrc
  copy:
      src: "files/bash/bashrc"
      dest: "{{ ansible_env.HOME }}/.bashrc"


- name: Copy bash profile
  copy:
      src: "files/bash/profile"
      dest: "{{ ansible_env.HOME }}/.profile"


- name: Copy git config
  template:
      src=gitconfig.j2
      dest="{{ ansible_env.HOME }}/.gitconfig"


- name: Copy global gitignore file
  copy:
      src: "files/git/gitignore_globals"
      dest: "{{ ansible_env.HOME }}/.gitignore_globals"


- name: Copy vim config
  copy:
      src: "files/vim/vimrc"
      dest: "{{ ansible_env.HOME }}/.vimrc"


- name: Synchronize vim files
  synchronize:
      src: "files/vim/vim/"
      dest: "{{ ansible_env.HOME }}/.vim/"
      use_ssh_args: yes


- name: Copy ssh keys
  synchronize:
      src: "files/ssh/"
      dest: "{{ ansible_env.HOME }}/.ssh/"
      use_ssh_args: yes


- name: Ensure ssh directory has proper permissions
  file:
      path: "{{ ansible_env.HOME }}/.ssh"
      state: directory
      mode: 0755


- name: Create ssh config file
  template:
      src=ssh_config.j2
      dest="{{ ansible_env.HOME }}/.ssh/config"
