---
- name: Ensure openvswitch package exists (Ubuntu)
  become: yes
  become_method: sudo
  package:
      name: openvswitch-switch
      state: latest
  when: ansible_distribution == "Ubuntu"


- name: Ensure openvswitch package exists (Fedora)
  become: yes
  become_method: sudo
  package:
      name: openvswitch
      state: latest
  when: ansible_distribution == "CentOS" or ansible_distribution == 'Red Hat Enterprise Linux' or ansible_distribution == "Fedora"


- name: Ensure infra bridge exists
  become: yes
  become_method: sudo
  openvswitch_bridge:
    bridge={{ infra_bridge_name }}


- name: Ensure Neutron external bridge exists
  become: yes
  become_method: sudo
  openvswitch_bridge:
    bridge={{ neutron_external_bridge_name }}
    fail_mode=standalone


- name: Ensure physical interface in infra bridge
  become: yes
  become_method: sudo
  openvswitch_port:
    bridge={{ infra_bridge_name }}
    port={{ iface }}
    state=present


- name: Create patch port between bridges
  become: yes
  become_method: sudo
  command: >-
    ovs-vsctl --may-exist add-port {{ infra_bridge_name }} patch-{{ neutron_external_bridge_name }}
    -- set interface patch-{{ neutron_external_bridge_name }} type=patch options:peer=patch-{{ infra_bridge_name }}
    -- --may-exist add-port {{ neutron_external_bridge_name }} patch-{{ infra_bridge_name }}
    -- set interface patch-{{ infra_bridge_name }} type=patch options:peer=patch-{{ neutron_external_bridge_name }}


- name: Configure IP address on the bridge
  block:
    - name: Get {{ iface }} CIDR
      set_fact:
        iface_cidr: "{{ hostvars[inventory_hostname]['ansible_' + iface]['ipv4']['address'] }}/{{ hostvars[inventory_hostname]['ansible_' + iface]['ipv4']['netmask'] }}"

    - name: Remove IP {{ iface_cidr }} from the {{ iface }}
      shell: "/sbin/ip address del {{ iface_cidr }} dev  {{ iface }}"
      become: yes
      become_method: sudo
      ignore_errors: True

    - name: Add IP {{ iface_cidr }} on the {{ infra_bridge_name }}
      shell: "/sbin/ip address add {{ iface_cidr }} dev  {{ infra_bridge_name }}"
      become: yes
      become_method: sudo
      ignore_errors: True

    - name: Ensure {{ iface }} is up
      shell: "/sbin/ip link set up dev {{ iface }}"
      become: yes
      become_method: sudo

    - name: Ensure {{ infra_bridge_name }} is up
      shell: "/sbin/ip link set up dev {{ infra_bridge_name }}"
      become: yes
      become_method: sudo

    - name: Create script to configure IP address on the bridge
      template:
        src=templates/set_infra_connectivity.sh.j2
        dest=/usr/local/bin/set_infra_connectivity
        mode=a+x
      become: yes
      become_method: sudo

  when: hostvars[inventory_hostname]['ansible_' + iface]['ipv4']['address'] is defined
