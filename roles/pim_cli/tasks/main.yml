---
- name: Install mail tools
  package:
    name: ['neomutt', 'notmuch', 'offlineimap']
    state: present
  become: yes
  become_method: sudo

- name: Synchronize mutt files
  synchronize:
      src: "files/mutt/"
      dest: "{{ ansible_env.HOME }}/.mutt/"
      use_ssh_args: yes

- name: Copy work mutt config
  copy:
      src: "files/muttrc_work"
      dest: "{{ ansible_env.HOME }}/.muttrc"

- name: Copy private mutt config
  copy:
      src: "files/muttrc_private"
      dest: "{{ ansible_env.HOME }}/.muttrc_kaplonskipl"

- name: Ensure mails directory exists
  file:
      path: '{{ ansible_env.HOME }}/.mails'
      state: directory

- name: Ensure mutt aliases file exists
  file:
      path: '{{ ansible_env.HOME }}/.mails/aliases'
      mode: '0644'
      state: touch

- name: "Check if offlineimap is installed"
  package_facts:
    manager: "auto"

- name: Configure offlineimap
  block:
    - name: Create offlineimaprc
      template:
        src=offlineimaprc.j2
        dest="{{ ansible_env.HOME }}/.offlineimaprc"
      register: offlineimap_config

    - name: Copy offlineimap systemd unit file
      copy:
        src: 'files/offlineimap/offlineimap.service'
        dest: '{{ ansible_env.HOME }}/.config/systemd/user/offlineimap@.service'

    - name: Create offlineimap_mailboxes script
      template:
        src=offlineimap_mailboxes.py.j2
        dest="{{ ansible_env.HOME }}/.mutt/create_mbnames_list.py"

    - name: Ensure offlineimap service for Red Hat account is running
      systemd:
        scope: user
        state: started
        enabled: yes
        name: offlineimap@redhat.service

    - name: Ensure offlineimap service for private account is running
      systemd:
        scope: user
        state: started
        enabled: yes
        name: offlineimap@kaplonskipl.service

    - name: Ensure offlineimap service for Red Hat account is restarted
      systemd:
        scope: user
        state: started
        enabled: yes
        name: offlineimap@redhat.service
      when: offlineimap_config.changed

    - name: Ensure offlineimap service for private account is restarted
      systemd:
        scope: user
        state: started
        enabled: yes
        name: offlineimap@kaplonskipl.service
      when: offlineimap_config.changed

  when: "'offlineimap' in ansible_facts.packages"

- name: Install RSS reader
  package:
    name: ['newsboat']
    state: present
  become: yes
  become_method: sudo

- name: Ensure newsboat directory exists
  file:
      path: '{{ ansible_env.HOME }}/.newsboat'
      state: directory

- name: Copy newsboat config
  copy:
      src: "files/newsboat/config"
      dest: "{{ ansible_env.HOME }}/.newsboat/config"
